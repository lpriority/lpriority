package com.lp.model;

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Events generated by hbm2java
 */
@Entity
@Table(name = "events")
public class Events implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private long eventId;
	@JsonManagedReference
	private School school;
	private String eventName;
	private String description;
	private Date announcementDate;
	private Date scheduleDate;
	private Date lastDate;
	private String venue;
	private String eventTime;
	private String contactPerson;
	private Date createDate;
	private Date changeDate;
	@Transient
	private String hours;
	@Transient
	private String minutes;
	@Transient
	private String timeMeridian;
	@Transient
	private String operationMode;
	private String readStatus;

	@JsonBackReference
	private List<EventStatus> eventStatus = new ArrayList<EventStatus>();	
	
	public Events() {
	}

	public Events(long eventId, Date changeDate) {
		this.eventId = eventId;
		this.changeDate = changeDate;
	}

	public Events(long eventId, School school, String eventName,
			String description, Date announcementDate, Date scheduleDate,
			Date lastDate, String venue, String eventTime,
			String contactPerson, Date createDate, Date changeDate, String readStatus) {
		this.eventId = eventId;
		this.school = school;
		this.eventName = eventName;
		this.description = description;
		this.announcementDate = announcementDate;
		this.scheduleDate = scheduleDate;
		this.lastDate = lastDate;
		this.venue = venue;
		this.eventTime = eventTime;
		this.contactPerson = contactPerson;
		this.createDate = createDate;
		this.changeDate = changeDate;
		this.readStatus = readStatus;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "event_id", unique = true, nullable = false)
	public long getEventId() {
		return this.eventId;
	}

	public void setEventId(long eventId) {
		this.eventId = eventId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "school_id")
	public School getSchool() {
		return this.school;
	}

	public void setSchool(School school) {
		this.school = school;
	}

	@Column(name = "event_name", length = 45)
	public String getEventName() {
		return this.eventName;
	}

	public void setEventName(String eventName) {
		this.eventName = eventName;
	}

	@Column(name = "description", length = 70)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "announcement_date", length = 10)
	public Date getAnnouncementDate() {
		return this.announcementDate;
	}

	public void setAnnouncementDate(Date announcementDate) {
		this.announcementDate = announcementDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "schedule_date", length = 10)
	public Date getScheduleDate() {
		return this.scheduleDate;
	}

	public void setScheduleDate(Date scheduleDate) {
		this.scheduleDate = scheduleDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "last_date", length = 10)
	public Date getLastDate() {
		return this.lastDate;
	}

	public void setLastDate(Date lastDate) {
		this.lastDate = lastDate;
	}

	@Column(name = "venue", length = 30)
	public String getVenue() {
		return this.venue;
	}

	public void setVenue(String venue) {
		this.venue = venue;
	}

	@Column(name = "event_time", length = 30)
	public String getEventTime() {
		return this.eventTime;
	}

	public void setEventTime(String eventTime) {
		this.eventTime = eventTime;
	}

	@Column(name = "contact_person", length = 30)
	public String getContactPerson() {
		return this.contactPerson;
	}

	public void setContactPerson(String contactPerson) {
		this.contactPerson = contactPerson;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "create_date", length = 10)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "change_date", nullable = false, length = 19)
	public Date getChangeDate() {
		return this.changeDate;
	}

	public void setChangeDate(Date changeDate) {
		this.changeDate = changeDate;
	}

	@Transient
	public String getHours() {
		return hours;
	}

	public void setHours(String hours) {
		this.hours = hours;
	}

	@Transient
	public String getMinutes() {
		return minutes;
	}

	public void setMinutes(String minutes) {
		this.minutes = minutes;
	}

	@Transient
	public String getTimeMeridian() {
		return timeMeridian;
	}

	public void setTimeMeridian(String timeMeridian) {
		this.timeMeridian = timeMeridian;
	}
	@Transient
	public String getOperationMode() {
		return operationMode;
	}

	public void setOperationMode(String operationMode) {
		this.operationMode = operationMode;
	}

	@Column(name = "read_status", length = 10)
	public String getReadStatus() {
		return readStatus;
	}

	public void setReadStatus(String readStatus) {
		this.readStatus = readStatus;
	}
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "event")
	public List<EventStatus> getEventStatus() {
		return eventStatus;
	}

	public void setEventStatus(List<EventStatus> eventStatus) {
		this.eventStatus = eventStatus;
	}
	
	
}
