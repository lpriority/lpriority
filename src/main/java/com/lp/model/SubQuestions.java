package com.lp.model;
// default package
// Generated May 29, 2014 7:37:08 AM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * SubQuestions generated by hbm2java
 */
@Entity
@Table(name = "sub_questions")
public class SubQuestions implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private long subQuestionId;
	private String subQuestion;
	@JsonManagedReference
	private AssignmentType assignmentType;
	@JsonManagedReference
	private Lesson lesson;
	private String usedFor;
	private long createdBy;
	@JsonBackReference
	private List<Questions> questionses =  new ArrayList<>();
	private int numOfOptions;
	private String title;
	@JsonBackReference
	private Grade grade;
	private String subQuesStatus;
	
	@Transient
	private List<AssignmentQuestions> assignmentQuestions;
	@Transient
	private List<StudentAssignmentStatus> studentassignmentStatus;
	public SubQuestions() {
	}

	public SubQuestions(long subQuestionId,AssignmentType assignmentType,Lesson lesson,String usedFor,long createdBy, String title) {
		this.subQuestionId = subQuestionId;
		this.assignmentType = assignmentType;
		this.lesson = lesson;
		this.usedFor = usedFor;
		this.createdBy = createdBy;		
		this.title = title;
	}

	public SubQuestions(long subQuestionId, String subQuestion, List<Questions> questionses,AssignmentType assignmentType,Lesson lesson,String usedFor,long createdBy, String title) {
		this.subQuestionId = subQuestionId;
		this.subQuestion = subQuestion;
		this.questionses = questionses;
		this.assignmentType = assignmentType;
		this.lesson = lesson;
		this.usedFor = usedFor;
		this.createdBy = createdBy;
		this.title = title;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "sub_question_id", unique = true, nullable = false)
	public long getSubQuestionId() {
		return this.subQuestionId;
	}

	public void setSubQuestionId(long subQuestionId) {
		this.subQuestionId = subQuestionId;
	}

	@Column(name = "sub_question", length = 5000)
	public String getSubQuestion() {
		return this.subQuestion;
	}

	public void setSubQuestion(String subQuestion) {
		this.subQuestion = subQuestion;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "subQuestions")
	public List<Questions> getQuestionses() {
		return this.questionses;
	}

	public void setQuestionses(List<Questions> questionses) {
		this.questionses = questionses;
	}
	
	@Column(name = "no_of_options", nullable = false)
	public int getNumOfOptions() {
		return numOfOptions;
	}
	
	public void setNumOfOptions(int numOfOptions) {
		this.numOfOptions = numOfOptions;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "assignment_type_id", nullable = false)
	public AssignmentType getAssignmentType() {
		return assignmentType;
	}

	public void setAssignmentType(AssignmentType assignmentType) {
		this.assignmentType = assignmentType;
	}
	
	@ManyToOne(fetch = FetchType.EAGER,cascade = CascadeType.PERSIST)
	@JoinColumn(name = "lesson_id",nullable = true)
	public Lesson getLesson() {
		return lesson;
	}

	public void setLesson(Lesson lesson) {
		this.lesson = lesson;
	}
	
	@Column(name = "used_for", nullable = false, length = 20)
	public String getUsedFor() {
		return usedFor;
	}

	public void setUsedFor(String usedFor) {
		this.usedFor = usedFor;
	}
	
	@Column(name = "created_by")
	public long getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(long createdBy) {
		this.createdBy = createdBy;
	}
	@Column(name = "title")
	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@ManyToOne(fetch = FetchType.EAGER,cascade = CascadeType.PERSIST)
	@JoinColumn(name = "grade_id",nullable = true)
	public Grade getGrade() {
		return grade;
	}

	public void setGrade(Grade grade) {
		this.grade = grade;
	}
	@Column(name = "sub_ques_status")
	public String getSubQuesStatus() {
		return subQuesStatus;
	}

	public void setSubQuesStatus(String subQuesStatus) {
		this.subQuesStatus = subQuesStatus;
	}
	
	@Transient
	public List<AssignmentQuestions> getAssignmentQuestions() {
		return assignmentQuestions;
	}
	public void setAssignmentQuestions(List<AssignmentQuestions> assignmentQuestions) {
		this.assignmentQuestions = assignmentQuestions;
	}
	
	@Transient
	public List<StudentAssignmentStatus> getStudentassignmentStatus() {
		return studentassignmentStatus;
	}
	public void setStudentassignmentStatus(List<StudentAssignmentStatus> studentassignmentStatus) {
		this.studentassignmentStatus = studentassignmentStatus;
	}
}
