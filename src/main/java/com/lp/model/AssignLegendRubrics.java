package com.lp.model;


import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
* States generated by hbm2java
*/
@Entity
@Table(name = "assign_legend_rubrics")
public class AssignLegendRubrics implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private long assignLegendRubricId;
	@JsonManagedReference
	private Grade grade;
	@JsonManagedReference
	private UserRegistration referRegId;
	@JsonManagedReference
	private UserRegistration createdBy ;
	@JsonManagedReference
	private Trimester trimester ;	
	
	public AssignLegendRubrics() {
	}

	public AssignLegendRubrics(long assignLegendRubricId) {
		this.assignLegendRubricId = assignLegendRubricId;
	}

	public AssignLegendRubrics(long assignLegendRubricId, Grade grade,UserRegistration referRegId,UserRegistration createdBy) {
		this.assignLegendRubricId = assignLegendRubricId;
		this.grade = grade;
		this.referRegId = referRegId;
		this.createdBy=createdBy;
	
	}
	
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "assign_legend_rubricId", unique = true, nullable = false)
	public long getAssignLegendRubricId() {
		return assignLegendRubricId;
	}

	public void setAssignLegendRubricId(long assignLegendRubricId) {
		this.assignLegendRubricId = assignLegendRubricId;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "grade_id")
	public Grade getGrade() {
		return this.grade;
	}

	public void setGrade(Grade grade) {
		this.grade = grade;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "refer_reg_id")
	public UserRegistration getReferRegId() {
		return this.referRegId;
	}

	public void setReferRegId(UserRegistration referRegId) {
		this.referRegId = referRegId;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "created_by")
	public UserRegistration getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(UserRegistration createdBy) {
		this.createdBy = createdBy;
	}
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "trimester_id")
	public Trimester getTrimester() {
		return this.trimester;
	}

	public void setTrimester(Trimester trimester) {
		this.trimester = trimester;
	}	
}
