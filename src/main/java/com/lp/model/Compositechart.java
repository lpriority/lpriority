package com.lp.model;
// default package
// Generated May 29, 2014 7:37:08 AM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Compositechart generated by hbm2java
 */
@Entity
@Table(name = "compositechart")
public class Compositechart implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private long compositeChartId;
	@JsonManagedReference
	private AssignmentType assignmentType;
	@JsonManagedReference
	private Gradeevents gradeevents;
	@JsonManagedReference
	private ClassStatus classStatus;
	private float overallgrade;
	private int nooftests;
	private int pointspertest;

	public Compositechart() {
	}

	public Compositechart(long compositeChartId, AssignmentType assignmentType,
			Gradeevents gradeevents, ClassStatus classStatus,
			float overallgrade, int nooftests, int pointspertest) {
		this.compositeChartId = compositeChartId;
		this.assignmentType = assignmentType;
		this.gradeevents = gradeevents;
		this.classStatus = classStatus;
		this.overallgrade = overallgrade;
		this.nooftests = nooftests;
		this.pointspertest = pointspertest;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "composite_chart_id", unique = true, nullable = false)
	public long getCompositeChartId() {
		return this.compositeChartId;
	}

	public void setCompositeChartId(long compositeChartId) {
		this.compositeChartId = compositeChartId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "assignment_type_id", nullable = false)
	public AssignmentType getAssignmentType() {
		return this.assignmentType;
	}

	public void setAssignmentType(AssignmentType assignmentType) {
		this.assignmentType = assignmentType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "grade_event_id", nullable = false)
	public Gradeevents getGradeevents() {
		return this.gradeevents;
	}

	public void setGradeevents(Gradeevents gradeevents) {
		this.gradeevents = gradeevents;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cs_id", nullable = false)
	public ClassStatus getClassStatus() {
		return this.classStatus;
	}

	public void setClassStatus(ClassStatus classStatus) {
		this.classStatus = classStatus;
	}

	@Column(name = "overallgrade", nullable = false, precision = 12, scale = 0)
	public float getOverallgrade() {
		return this.overallgrade;
	}

	public void setOverallgrade(float overallgrade) {
		this.overallgrade = overallgrade;
	}

	@Column(name = "nooftests", nullable = false)
	public int getNooftests() {
		return this.nooftests;
	}

	public void setNooftests(int nooftests) {
		this.nooftests = nooftests;
	}

	@Column(name = "pointspertest", nullable = false)
	public int getPointspertest() {
		return this.pointspertest;
	}

	public void setPointspertest(int pointspertest) {
		this.pointspertest = pointspertest;
	}

}
