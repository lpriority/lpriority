package com.lp.model;

// default package
// Generated May 29, 2014 7:37:08 AM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Address generated by hbm2java
 */
@Entity
@Table(name = "syn_history_handler")
public class SynHistoryHandler implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private long synHistoryHandlerId;
	@JsonManagedReference
	private SynHandler synHandler;
	
	private Date timeStamp;
	private String currentTab;
	private String currentElement;
	private String synStatus;
	private String synControl;
	private String beforeUpdate;
	private String afterUpdate;
	private String contentStatus;
	
	
	public SynHistoryHandler() {
	}

	
	public SynHistoryHandler(long synHistoryHandlerId, SynHandler synHandler,
			Date timeStamp, String currentTab, String currentElement,
			String synStatus, String synControl, String beforeUpdate,
			String afterUpdate, String contentStatus) {
		super();
		this.synHistoryHandlerId = synHistoryHandlerId;
		this.synHandler = synHandler;
		this.timeStamp = timeStamp;
		this.currentTab = currentTab;
		this.currentElement = currentElement;
		this.synStatus = synStatus;
		this.synControl = synControl;
		this.beforeUpdate = beforeUpdate;
		this.afterUpdate = afterUpdate;
		this.contentStatus = contentStatus;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "syn_history_handler_id", unique = true, nullable = false)
	public long getSynHistoryHandlerId() {
		return synHistoryHandlerId;
	}


	public void setSynHistoryHandlerId(long synHistoryHandlerId) {
		this.synHistoryHandlerId = synHistoryHandlerId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "syn_handler_id", nullable = false)
	public SynHandler getSynHandler() {
		return synHandler;
	}


	public void setSynHandler(SynHandler synHandler) {
		this.synHandler = synHandler;
	}

	@Column(name = "time_stamp", nullable = false)
	public Date getTimeStamp() {
		return timeStamp;
	}


	public void setTimeStamp(Date timeStamp) {
		this.timeStamp = timeStamp;
	}

	@Column(name = "current_tab", nullable = false)
	public String getCurrentTab() {
		return currentTab;
	}


	public void setCurrentTab(String currentTab) {
		this.currentTab = currentTab;
	}

	@Column(name = "current_element")
	public String getCurrentElement() {
		return currentElement;
	}


	public void setCurrentElement(String currentElement) {
		this.currentElement = currentElement;
	}

	@Column(name = "syn_status", nullable = false)
	public String getSynStatus() {
		return synStatus;
	}


	public void setSynStatus(String synStatus) {
		this.synStatus = synStatus;
	}

	@Column(name = "syn_control")
	public String getSynControl() {
		return synControl;
	}


	public void setSynControl(String synControl) {
		this.synControl = synControl;
	}

	@Column(name = "before_update")
	public String getBeforeUpdate() {
		return beforeUpdate;
	}


	public void setBeforeUpdate(String beforeUpdate) {
		this.beforeUpdate = beforeUpdate;
	}

	@Column(name = "after_update")
	public String getAfterUpdate() {
		return afterUpdate;
	}


	public void setAfterUpdate(String afterUpdate) {
		this.afterUpdate = afterUpdate;
	}

	@Column(name = "content_status")
	public String getContentStatus() {
		return contentStatus;
	}


	public void setContentStatus(String contentStatus) {
		this.contentStatus = contentStatus;
	}
	
	
}
