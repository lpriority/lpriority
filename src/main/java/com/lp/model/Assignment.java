package com.lp.model;

// default package
// Generated May 29, 2014 7:37:08 AM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Assignment generated by hbm2java
 */
@Entity
@Table(name = "assignment")
public class Assignment implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private long assignmentId;
	@JsonManagedReference
	private AssignmentType assignmentType;
	@JsonManagedReference
	private Lesson lesson;
	@JsonManagedReference
	private ClassStatus classStatus;
	private String title;
	private String assignStatus;
	private String instructions;
	private Date dateAssigned;
	private Date dateDue;
	private Long createdBy;
	private String usedFor;
	@JsonManagedReference
	private BenchmarkCategories benchmarkCategories;
	private Long performanceGroupId;
	private String testType;
	private Integer recordTime;
	private String mathQuizIds;
	@JsonManagedReference
	private BenchmarkDirections benchmarkDirections;
	@JsonManagedReference
	private Language language;
	@Transient
	private long benchmarkDirectionsId; 
	@Transient
	private Long benchmarkId;

	@JsonManagedReference
	private K1AutoAssignedSets autoAssignedSets;
	

	public Assignment() {
	}

	public Assignment(long assignmentId, Lesson lesson, String title,
			String assignStatus, String instructions, Date dateAssigned,
			Date dateDue) {
		this.assignmentId = assignmentId;
		this.lesson = lesson;
		this.title = title;
		this.assignStatus = assignStatus;
		this.instructions = instructions;
		this.dateAssigned = dateAssigned;
		this.dateDue = dateDue;
	}

	public Assignment(long assignmentId, AssignmentType assignmentType,
			Lesson lesson, ClassStatus classStatus, String title,
			String assignStatus, String instructions, Date dateAssigned,
			Date dateDue, Long createdBy, String usedFor, BenchmarkCategories benchmarkCategories,
			Long performanceGroupId, String testType, Integer recordTime,
			BenchmarkDirections benchmarkDirections, 
			K1AutoAssignedSets autoAssignedSets,Language language, String mathQuizIds) {
		this.assignmentId = assignmentId;
		this.assignmentType = assignmentType;
		this.lesson = lesson;
		this.classStatus = classStatus;
		this.title = title;
		this.assignStatus = assignStatus;
		this.instructions = instructions;
		this.dateAssigned = dateAssigned;
		this.dateDue = dateDue;
		this.createdBy = createdBy;
		this.usedFor = usedFor;
		this.benchmarkCategories = benchmarkCategories;
		this.performanceGroupId = performanceGroupId;
		this.testType = testType;
		this.recordTime = recordTime;
		this.benchmarkDirections = benchmarkDirections;
		this.autoAssignedSets = autoAssignedSets;
		this.language = language;
		this.mathQuizIds = mathQuizIds;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "assignment_id", unique = true, nullable = false)
	public long getAssignmentId() {
		return this.assignmentId;
	}

	public void setAssignmentId(long assignmentId) {
		this.assignmentId = assignmentId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "assignment_type_id")
	public AssignmentType getAssignmentType() {
		return this.assignmentType;
	}

	public void setAssignmentType(AssignmentType assignmentType) {
		this.assignmentType = assignmentType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "lesson_id", nullable = true)
	public Lesson getLesson() {
		return this.lesson;
	}

	public void setLesson(Lesson lesson) {
		this.lesson = lesson;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cs_id")
	public ClassStatus getClassStatus() {
		return this.classStatus;
	}

	public void setClassStatus(ClassStatus classStatus) {
		this.classStatus = classStatus;
	}

	@Column(name = "title", nullable = false, length = 45)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "assign_status", nullable = false, length = 100)
	public String getAssignStatus() {
		return this.assignStatus;
	}

	public void setAssignStatus(String assignStatus) {
		this.assignStatus = assignStatus;
	}

	@Column(name = "instructions", nullable = true, length = 100)
	public String getInstructions() {
		return this.instructions;
	}

	public void setInstructions(String instructions) {
		this.instructions = instructions;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_assigned", nullable = false, length = 10)
	public Date getDateAssigned() {
		return this.dateAssigned;
	}

	public void setDateAssigned(Date dateAssigned) {
		this.dateAssigned = dateAssigned;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_due", nullable = false, length = 10)
	public Date getDateDue() {
		return this.dateDue;
	}

	public void setDateDue(Date dateDue) {
		this.dateDue = dateDue;
	}

	@Column(name = "created_by")
	public Long getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Long createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "used_for", length = 30)
	public String getUsedFor() {
		return this.usedFor;
	}

	public void setUsedFor(String usedFor) {
		this.usedFor = usedFor;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "benchmark_id")
	public BenchmarkCategories getBenchmarkCategories() {
		return this.benchmarkCategories;
	}

	public void setBenchmarkCategories(BenchmarkCategories benchmarkCategories) {
		this.benchmarkCategories = benchmarkCategories;
	}

	@Column(name = "performance_group_id")
	public Long getPerformanceGroupId() {
		return this.performanceGroupId;
	}

	public void setPerformanceGroupId(Long performanceGroupId) {
		this.performanceGroupId = performanceGroupId;
	}

	@Column(name = "test_type")
	public String getTestType() {
		return testType;
	}

	public void setTestType(String testType) {
		this.testType = testType;
	}

	@Column(name = "record_time")
	public Integer getRecordTime() {
		return recordTime;
	}

	public void setRecordTime(Integer recordTime) {
		this.recordTime = recordTime;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "benchmark_directions_id")
	public BenchmarkDirections getBenchmarkDirections() {
		return benchmarkDirections;
	}

	public void setBenchmarkDirections(BenchmarkDirections benchmarkDirections) {
		this.benchmarkDirections = benchmarkDirections;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "auto_elt_set_id")
	public K1AutoAssignedSets getAutoAssignedSets() {
		return autoAssignedSets;
	}

	public void setAutoAssignedSets(K1AutoAssignedSets autoAssignedSets) {
		this.autoAssignedSets = autoAssignedSets;
	}

	@Transient
	public long getBenchmarkDirectionsId() {
		return benchmarkDirectionsId;
	}

	public void setBenchmarkDirectionsId(long benchmarkDirectionsId) {
		this.benchmarkDirectionsId = benchmarkDirectionsId;
	}
	
	@Transient
	public Long getBenchmarkId() {
		return benchmarkId;
	}

	public void setBenchmarkId(Long benchmarkId) {
		this.benchmarkId = benchmarkId;
	}
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "language_id")
	public Language getLanguage() {
		return language;
	}

	public void setLanguage(Language language) {
		this.language = language;
	}
	
	@Column(name = "math_quiz_ids")
	public String getMathQuizIds() {
		return mathQuizIds;
	}

	public void setMathQuizIds(String mathQuizIds) {
		this.mathQuizIds = mathQuizIds;
	}
	
}
