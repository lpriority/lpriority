package com.lp.model;
// default package
// Generated May 29, 2014 7:37:08 AM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Questions generated by hbm2java
 */
@Entity
@Table(name = "questions")
public class Questions implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JacTemplate jacTemplate;
	private long questionId;
	@JsonManagedReference
	private AssignmentType assignmentType;
	@JsonManagedReference
	private SubQuestions subQuestions;
	@JsonManagedReference
	private Lesson lesson;
	private String question;
	private String answer;
	private String option1;
	private String option2;
	private String option3;
	private String option4;
	private String option5;
	private String usedFor;
	private Integer createdBy;
	private String BVoicedirectionspath;
	private String BRetelldirectionspath;
	private String BTitle;
	private String BGradeLevel;
	private String ptName;
	private String ptSubjectArea;
	private String ptDirections;
	@Transient
	private String audioVoice;
	@Transient
	private String retelAudioVoice;
	@Transient
	@JsonBackReference
	private List<PtaskFiles> ptaskFiles;
	private Integer numOfOptions;
	@JsonManagedReference
	private Grade grade;
	private String queStatus;
	private Date createDate;
	private Date changeDate;


	@Transient
	private List<Rubric> rubrics = new ArrayList<>();

	public Questions() {
	}

	public Questions(AssignmentType assignmentType, SubQuestions subQuestions,Date createDate,
			Date changeDate,
			String usedFor) {
		this.assignmentType = assignmentType;
		this.subQuestions = subQuestions;
		this.usedFor = usedFor;
		this.createDate = createDate;
		this.changeDate = changeDate;
	}

	public Questions(JacTemplate jacTemplate, AssignmentType assignmentType, SubQuestions subQuestions,
			Lesson lesson, String question,
			String answer, String option1, String option2, String option3,
			String option4, String option5, String usedFor, Integer createdBy,Date createDate,
			Date changeDate,
			String BVoicedirectionspath, String BRetelldirectionspath, String BTitle, 
			String BGradeLevel, String ptName, String ptSubjectArea, 
			String ptDirections, List<Rubric> rubrics, Integer numOfOptions) {
		this.jacTemplate = jacTemplate;
		this.assignmentType = assignmentType;
		this.subQuestions = subQuestions;
		this.lesson = lesson;
		this.question = question;
		this.answer = answer;
		this.option1 = option1;
		this.option2 = option2;
		this.option3 = option3;
		this.option4 = option4;
		this.option5 = option5;
		this.usedFor = usedFor;
		this.createdBy = createdBy;
		this.BVoicedirectionspath = BVoicedirectionspath;
		this.BRetelldirectionspath = BRetelldirectionspath;
		this.BTitle = BTitle;
		this.BGradeLevel = BGradeLevel;
		this.ptName = ptName;
		this.ptSubjectArea = ptSubjectArea;
		this.ptDirections = ptDirections;
		this.rubrics = rubrics;
		this.numOfOptions = numOfOptions;
		this.grade=grade;
		this.createDate = createDate;
		this.changeDate = changeDate;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "question_id", unique = true, nullable = false)
	public long getQuestionId() {
		return this.questionId;
	}

	public void setQuestionId(long questionId) {
		this.questionId = questionId;
	}


	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "assignment_type_id", nullable = false)
	public AssignmentType getAssignmentType() {
		return this.assignmentType;
	}

	public void setAssignmentType(AssignmentType assignmentType) {
		this.assignmentType = assignmentType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "sub_question_id", nullable = true)
	public SubQuestions getSubQuestions() {
		return this.subQuestions;
	}

	public void setSubQuestions(SubQuestions subQuestions) {
		this.subQuestions = subQuestions;
	}

	@ManyToOne(fetch = FetchType.EAGER,cascade = CascadeType.PERSIST)
	@JoinColumn(name = "lesson_id",nullable = true)
	public Lesson getLesson() {
		return this.lesson;
	}

	public void setLesson(Lesson lesson) {
		this.lesson = lesson;
	}

	@Column(name = "question", length = 500)
	public String getQuestion() {
		return this.question;
	}

	public void setQuestion(String question) {
		this.question = question;
	}

	@Column(name = "answer", length = 50)
	public String getAnswer() {
		return this.answer;
	}

	public void setAnswer(String answer) {
		this.answer = answer;
	}

	@Column(name = "option1", length = 50)
	public String getOption1() {
		return this.option1;
	}

	public void setOption1(String option1) {
		this.option1 = option1;
	}

	@Column(name = "option2", length = 50)
	public String getOption2() {
		return this.option2;
	}

	public void setOption2(String option2) {
		this.option2 = option2;
	}

	@Column(name = "option3", length = 50)
	public String getOption3() {
		return this.option3;
	}

	public void setOption3(String option3) {
		this.option3 = option3;
	}

	@Column(name = "option4", length = 50)
	public String getOption4() {
		return this.option4;
	}

	public void setOption4(String option4) {
		this.option4 = option4;
	}

	@Column(name = "option5", length = 50)
	public String getOption5() {
		return this.option5;
	}

	public void setOption5(String option5) {
		this.option5 = option5;
	}

	@Column(name = "used_for", nullable = false, length = 20)
	public String getUsedFor() {
		return this.usedFor;
	}

	public void setUsedFor(String usedFor) {
		this.usedFor = usedFor;
	}

	@Column(name = "created_by")
	public Integer getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "b_voicedirectionspath", length = 500)
	public String getBVoicedirectionspath() {
		return this.BVoicedirectionspath;
	}

	public void setBVoicedirectionspath(String BVoicedirectionspath) {
		this.BVoicedirectionspath = BVoicedirectionspath;
	}

	@Column(name = "b_retelldirectionspath", length = 500)
	public String getBRetelldirectionspath() {
		return this.BRetelldirectionspath;
	}

	public void setBRetelldirectionspath(String BRetelldirectionspath) {
		this.BRetelldirectionspath = BRetelldirectionspath;
	}

	@Column(name = "b_title", length = 100)
	public String getBTitle() {
		return this.BTitle;
	}

	public void setBTitle(String BTitle) {
		this.BTitle = BTitle;
	}

	@Column(name = "b_grade_level", length = 20)
	public String getBGradeLevel() {
		return this.BGradeLevel;
	}

	public void setBGradeLevel(String BGradeLevel) {
		this.BGradeLevel = BGradeLevel;
	}

	@Column(name = "pt_name", length = 100)
	public String getPtName() {
		return this.ptName;
	}

	public void setPtName(String ptName) {
		this.ptName = ptName;
	}

	@Column(name = "pt_subject_area", length = 100)
	public String getPtSubjectArea() {
		return this.ptSubjectArea;
	}

	public void setPtSubjectArea(String ptSubjectArea) {
		this.ptSubjectArea = ptSubjectArea;
	}

	@Column(name = "pt_directions", length = 500)
	public String getPtDirections() {
		return this.ptDirections;
	}

	public void setPtDirections(String ptDirections) {
		this.ptDirections = ptDirections;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "jac_template_id")
	@JsonIgnore
	public JacTemplate getJacTemplate() {
		return this.jacTemplate;
	}

	public void setJacTemplate(JacTemplate jacTemplate) {
		this.jacTemplate = jacTemplate;
	}
	@Transient
	public String getAudioVoice() {
		return audioVoice;
	}

	public void setAudioVoice(String audioVoice) {
		this.audioVoice = audioVoice;
	}
	@Transient
	public String getRetelAudioVoice() {
		return retelAudioVoice;
	}

	public void setRetelAudioVoice(String retelAudioVoice) {
		this.retelAudioVoice = retelAudioVoice;
	}
	@Transient
	public List<Rubric> getRubrics() {
		return rubrics;
	}

	public void setRubrics(List<Rubric> rubrics) {
		this.rubrics = rubrics;
	}
	@Transient
	public List<PtaskFiles> getPtaskFiles() {
		return ptaskFiles;
	}

	public void setPtaskFiles(List<PtaskFiles> ptaskFiles) {
		this.ptaskFiles = ptaskFiles;
	}
	@Column(name = "num_of_options")
	public Integer getNumOfOptions() {
		return numOfOptions;
	}

	public void setNumOfOptions(Integer numOfOptions) {
		this.numOfOptions = numOfOptions;
	}
	@ManyToOne(fetch = FetchType.EAGER,cascade = CascadeType.PERSIST)
	@JoinColumn(name = "grade_id",nullable = true)
	public Grade getGrade() {
		return this.grade;
	}

	public void setGrade(Grade grade) {
		this.grade = grade;
	}
	@Column(name = "ques_status")
	public String getQueStatus() {
		return queStatus;
	}

	public void setQueStatus(String queStatus) {
		this.queStatus = queStatus;
	}
	
	@Temporal(TemporalType.DATE)
	@Column(name = "create_date", nullable = false, length = 10)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "change_date", nullable = false, length = 19)
	public Date getChangeDate() {
		return this.changeDate;
	}

	public void setChangeDate(Date changeDate) {
		this.changeDate = changeDate;
	}


}
