package com.lp.model;
// default package
// Generated May 29, 2014 7:37:08 AM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.directwebremoting.annotations.RemoteProperty;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * States generated by hbm2java
 */
@Entity
@Table(name = "learning_indicator_values")
public class LearningIndicatorValues implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private long learningValuesId;
	@JsonManagedReference
	private LearningIndicator learningIndicator;
	@JsonManagedReference
	private LegendSubCriteria legendSubCriteria;
	@JsonManagedReference
	private Legend legend;
	private String notes;
	private String teacherComment;
	private String submitStatus;
	
	 
	@JsonManagedReference
	private Legend teacherScore;
	
		
	public LearningIndicatorValues() {
	}

	public LearningIndicatorValues(long learningValuesId) {
		this.learningValuesId = learningValuesId;
	}

	public LearningIndicatorValues(long learningValuesId, LearningIndicator learningIndicator, LegendSubCriteria legendSubCriteria,
			Legend legend,String notes,String teacherComment,Legend teacherScore,String filepath) {
		this.learningValuesId = learningValuesId;
		this.learningIndicator = learningIndicator;
		this.legendSubCriteria = legendSubCriteria;
		this.legend = legend;
		this.notes = notes;
		this.teacherComment=teacherComment;
		this.teacherScore=teacherScore;
		
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "learning_values_id", unique = true, nullable = false)
	public long getLearningValuesId() {
		return this.learningValuesId;
	}

	public void setLearningValuesId(long learningValuesId) {
		this.learningValuesId = learningValuesId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "learning_indicator_id", nullable = false)
	public LearningIndicator getLearningIndicator() {
		return this.learningIndicator;
	}

	public void setLearningIndicator(LearningIndicator learningIndicator) {
		this.learningIndicator = learningIndicator;
	}
    
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "sub_criteria_id")
	public LegendSubCriteria getLegendSubCriteria() {
		return this.legendSubCriteria;
	}

	public void setLegendSubCriteria(LegendSubCriteria legendSubCriteria) {
		this.legendSubCriteria = legendSubCriteria;
	}

	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "legend_id")
	public Legend getLegend() {
		return this.legend;
	}

	public void setLegend(Legend legend) {
		this.legend = legend;
	}
	@RemoteProperty
	@Column(name = "notes", length = 100)
	public String getNotes() {
		return this.notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "teacher_score")
	public Legend getTeacherScore() {
		return this.teacherScore;
	}

	public void setTeacherScore(Legend teacherScore) {
		this.teacherScore = teacherScore;
	}
	@RemoteProperty
	@Column(name = "teacher_comment", length = 500)
	public String getTeacherComment() {
		return this.teacherComment;
	}

	public void setTeacherComment(String teacherComment) {
		this.teacherComment = teacherComment;
	}
	
	@Column(name = "submit_status", length = 500)
	public String getSubmitStatus() {
		return this.submitStatus;
	}

	public void setSubmitStatus(String submitStatus) {
		this.submitStatus = submitStatus;
	}
		
	
}